/*Primeira coisa a se definir é uma class container*/
/*Abaixo está escrita uma class para todos os containers*/
.container{
  max-width: 960px;
  margin: 0 auto;
}
/*Definido pois vou ter algum elemento ainda com float, logo, é melhor utilizá-lo*/
.container::after, .container::before{
  content: "";
  display: table;
  clear: both;
}
/*Criaremos os grid ou columss - Os tamanhos foram pegados no adobe XD*/
/*Colocamos essas propriedades aqui pois vão ser comuns a todos*/
.grid-1, .grid-2, .grid-3, .grid-4, .grid-5, .grid-6, .grid-7, .grid-8, .grid-9, .grid-10,
.grid-11, .grid-12{
  margin-left: 10px;
  margin-right: 10px;
  float: left; /*Sempre colocar, pois todo grid flutua*/
  display: block;/*É uma boa prática colocar pois independente do elemento que colocarmos
  se for inline etc,ele já transforma o elemento pra block e faz a flutuação e aí o width
  vai pegar de forma perfeita*/
  min-height: 1px;
}
/*Melhor colocar em porcentagem pois ele sempre iria pegar a porcentagem da tela total
independente do tamanho que fosse definido*/
/*=> 100/12(grids) = 8.333%*/
.grid-1{
  width: calc(8.333% - 20px); /*Para evitar que quebre, utilizaremos a porcentagem menos os px do margin left
  e right com esses comandos*/
}
.grid-2{
  width: calc(16.666% - 20px);
}
.grid-3{
  width: calc(25% - 20px);
}
.grid-4{
  width: calc(33.333% - 20px);
}
.grid-5{
  width: calc(41.666% - 20px);
}
.grid-6{
  width: calc(50% - 20px);
}
.grid-7{
  width: calc(58.333% - 20px);
}
.grid-8{
  width: calc(66.666% - 20px);
}
.grid-9{
  width: calc(75% - 20px);
}
.grid-10{
  width: calc(83.333% - 20px);
}
.grid-11{
  width: calc(91.666% - 20px);
}
.grid-12{
  width: calc(100% - 20px);
}
@media (max-width: 739px) {
	.container {
		max-width: 300px;
	}
	.grid-1, .grid-2, .grid-3, .grid-4, .grid-5, .grid-6, .grid-7, .grid-8, .grid-9, .grid-10, .grid-11, .grid-12 {
		width: 100%;
		margin-left: 0px;
		margin-right: 0px;
		float: none;
	}
}